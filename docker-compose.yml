version: '3.9'

services:
  mysql_db:
    networks:
      - mysql-network
    platform: linux/x86_64 # MacOS M1 Chip Fix
    image: mysql:5.7
    restart: always
    ports:
        - 3306:3306
    environment:
        MYSQL_ROOT_PASSWORD: root
        MYSQL_PASSWORD: root
        MYSQL_DATABASE: testdb
    volumes:
        - ./apps/users/src/database/scripts:/docker-entrypoint-initdb.d
        - user-db:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  users:
    networks:
      - web
      - mysql-network
    depends_on:
      mysql_db:
        condition: service_healthy
    build:
      context:  ./apps/users
      dockerfile: Dockerfile
    restart: always
    ports:
      - 8001:8001
    links:
      - mysql_db
    environment:
      PORT: 8001
      MYSQL_DATABASE_HOST: mysql_db
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_DATABASE: testdb 
      ACCESS_TOKEN_SECRET: testSecret
      REFRESH_TOKEN_SECRET: testRefreshSecret

  cassandra_db:
    networks:
      - cassandra-network
    image: cassandra:3.11.2
    restart: always
    ports:
      - 9042:9042
    environment:
      - "MAX_HEAP_SIZE=256M"
      - "HEAP_NEWSIZE=128M"
    volumes:
      - products-db:/var/lib/cassandra
      # - ./apps/products/src/database/scripts/init.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD", "cqlsh", "-u cassandra", "-p cassandra" ,"-e describe keyspaces"]
      interval: 15s
      timeout: 10s
      retries: 10

  cassandra-load-keyspace:
    container_name: cassandra-load-keyspace
    networks:
      - cassandra-network
    image: cassandra:3.11.2
    depends_on:
      cassandra_db:
        condition: service_healthy
    volumes:
      - ./apps/products/src/database/scripts/init.cql:/schema.cql
    command: /bin/bash -c "echo loading cassandra keyspace && cqlsh cassandra_db -f /schema.cql --debug" # -u user -p pass

  products:
    networks:
      - web
      - cassandra-network
    depends_on:
      - cassandra-load-keyspace
    build:
      context: ./apps/products
      dockerfile: Dockerfile
    restart: always
    ports:
      - 8002:8002
    environment:
      PORT: 8002
      CASSANDRA_HOST: cassandra_db
      CASSANDRA_DATACENTER: datacenter1
      CASSANDRA_KEYSPACE: mykeyspace
      CASSANDRA_USER: my_user
      CASSANDRA_PASSWORD: my_password
      CASSANDRA_PORT: 9042

  mysql_orders_db:
    networks:
      - order-db-network
    platform: linux/x86_64
    image: mysql:5.7
    restart: always
    ports:
        - 3307:3306
    environment:
        MYSQL_ROOT_PASSWORD: root
        MYSQL_PASSWORD: root
        MYSQL_DATABASE: testdb
    volumes:
        - ./apps/orders/src/database/scripts:/docker-entrypoint-initdb.d
        - orders-db:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  orders:
    networks:
      - web
      - order-db-network
    depends_on:
      mysql_orders_db:
        condition: service_healthy
    build:
      context:  ./apps/orders
      dockerfile: Dockerfile
    restart: always
    ports:
      - 8003:8003
    links:
      - mysql_orders_db
    environment:
      PORT: 8003
      MYSQL_HOST: mysql_orders_db
      MYSQL_DATABASE_PORT: 3306
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_DATABASE: testdb 

  gateway:
    networks:
      - web
    depends_on:
      - users
      - products
      - orders
    build:
      context:  ./apps/gateway
      dockerfile: Dockerfile
    restart: always
    ports:
      - 5000:5000
    environment:
      PORT: 5000
      USERS_API_URL: http://users:8001
      PRODUCTS_API_URL: http://products:8002
      ORDERS_API_URL:  http://orders:8003
      ACCESS_TOKEN_SECRET: testSecret
      REFRESH_TOKEN_SECRET: testRefreshSecret

  client:
    depends_on:
      - gateway
    build:
      context: ./apps/client
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3000:80"
    environment:
      - REACT_APP_GATEWAY_API_URL=http://gateway:5000


# Persist the databases
volumes:
  user-db:
    driver: local
  orders-db:
    driver: local
  products-db:

networks:
  web:
  order-db-network:
  cassandra-network:
  mysql-network: