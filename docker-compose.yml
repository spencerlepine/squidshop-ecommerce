# https://blog.harrison.dev/2016/06/19/integration-testing-with-docker-compose.html
version: '3.9'

services:
  mysql_db:
    networks:
      - mysql-network
    platform: linux/x86_64 # M1 Chip work
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'testdb'
      # So you don't have to use root, but you can if you like
      # MYSQL_USER: 'root' BROKEN
      # You can use whatever password you like
      MYSQL_PASSWORD: '12345'
      # Password for root access
      MYSQL_ROOT_PASSWORD: '12345'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - user-db:/var/lib/mysql

  users:
    networks:
      - web
      - mysql-network
    depends_on:
      - mysql_db
    build:
      context:  users
      dockerfile: Dockerfile
    ports:
      - 8001:8001
    environment:
      PORT: '8001'
      DATABASE_HOST: localhost
      DATABASE_USER: root
      DATABASE_PASSWORD: '12345'
      DATABASE_NAME: testdb
      DATABASE_DIALECT: mysql
      NODE_ENV: production

  cassandra_db:
    networks:
      - cassandra-network
    image: cassandra:3.11.2
    restart: always
    ports:
      - 9042:9042
    environment:
      - "MAX_HEAP_SIZE=256M"
      - "HEAP_NEWSIZE=128M"
    volumes:
      - products-db:/var/lib/cassandra
    healthcheck:
      test: ["CMD", "cqlsh", "-u cassandra", "-p cassandra" ,"-e describe keyspaces"]
      interval: 15s
      timeout: 10s
      retries: 10

  products:
    networks:
      - web
      - cassandra-network
    depends_on:
      - cassandra_db
    build:
      context: products
      dockerfile: Dockerfile
    ports:
      - 8002:8002
    environment:
      PORT: '8002'
      CASSANDRA_HOST: cassandra_db
      CASSANDRA_DATACENTER: datacenter1
      CASSANDRA_KEYSPACE: mykeyspace
      CASSANDRA_USER: my_user
      CASSANDRA_PASSWORD: my_password
      CASSANDRA_PORT: '9042'

  postgres_db:
    networks:
      - postgres-network
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12345
    ports:
      - '5432:5432'
    volumes:
      - orders-db:/var/lib/postgresql

  orders:
    networks:
      - web
      - postgres-network
    depends_on:
      - postgres_db
    build:
      context:  orders
      dockerfile: Dockerfile
    ports:
      - 8003:8003
    environment:
      PORT: '8003'
      DATABASE_HOST: postgres-network
      DATABASE_USER: root
      DATABASE_PASSWORD: '12345'
      DATABASE_NAME: testdb
      DATABASE_DIALECT: postgres
      NODE_ENV: production
      ACCESS_TOKEN_SECRET: mysecret


  gateway:
    networks:
      - web
    depends_on:
      - users
      - products
      - orders
    build:
      context:  gateway
      dockerfile: Dockerfile
    ports:
      - 5000:5000
    environment:
      PORT: 5000
      USERS_API_URL: http://users:8001
      PRODUCTS_API_URL: http://products:8002
      ORDERS_API_URL:  http://orders:8003

  client:
    depends_on:
      - gateway
    build:
      context: client
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    environment:
      - REACT_GATEWAY_API_URL=http://gateway:5000


# Persist the databases
volumes:
  user-db:
  orders-db:
  products-db:

networks:
  web:
  postgres-network:
  cassandra-network:
  mysql-network: