name: Branch CI

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  Continuous Integration Workflow
#  Author: @spencerlepine
#
#  Features
#    - lint, test, and build (w/ Docker)
#    - output test coverage to artifact
#    - comment test coverage on pull request
#    - run CI for each microservice
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

on:
  pull_request:
    branches:
      - '*'

jobs:
  # -- Client Frontend --------------------
  client_ci:
    name: "ðŸ§ª Client CI"
    uses: ./.github/workflows/node_ci.yml
    with:
      folder_name: client

  client_coverage:
    needs: [client_ci]
    runs-on: ubuntu-latest
    env:
      service: 'client'

    name: "ðŸŽ‰ Coverage Report"
    steps:
      - name: Download Test Covereage Output
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.service }}-code-coverage-report-${{ github.sha }}

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          header: client
          recreate: true
          path: ${{ env.service }}-code-coverage-results.md

  # -- Gateway Microservice --------------------
  gateway_ci:
    name: "ðŸ§ª Gateway CI"
    uses: ./.github/workflows/node_ci.yml
    with:
      folder_name: gateway

  gateway_coverage:
    needs: [gateway_ci]
    runs-on: ubuntu-latest
    env:
      service: 'gateway'

    name: "ðŸŽ‰ Coverage Report"
    steps:
      - name: Download Test Covereage Output
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.service }}-code-coverage-report-${{ github.sha }}

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          header: gateway
          recreate: true
          path: ${{ env.service }}-code-coverage-results.md

  # -- Users Microservice --------------------
  users_ci:
    name: "ðŸ§ª Users CI"
    uses: ./.github/workflows/node_ci.yml
    with:
      folder_name: users

  users_coverage:
    needs: [users_ci]
    runs-on: ubuntu-latest
    env:
      service: 'users'

    name: "ðŸŽ‰ Coverage Report"
    steps:
      - name: Download Test Covereage Output
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.service }}-code-coverage-report-${{ github.sha }}

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          header: users
          recreate: true
          path: ${{ env.service }}-code-coverage-results.md

  # -- Products Microservice --------------------
  products_ci:
    name: "ðŸ§ª Products CI"
    uses: ./.github/workflows/node_ci.yml
    with:
      folder_name: products

  products_coverage:
    needs: [products_ci]
    runs-on: ubuntu-latest
    env:
      service: 'products'

    name: "ðŸŽ‰ Coverage Report"
    steps:
      - name: Download Test Covereage Output
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.service }}-code-coverage-report-${{ github.sha }}

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          header: products
          recreate: true
          path: ${{ env.service }}-code-coverage-results.md

  # -- Orders Microservice --------------------
  orders_ci:
    name: "ðŸ§ª Orders CI"
    uses: ./.github/workflows/node_ci.yml
    with:
      folder_name: orders

  orders_coverage:
    needs: [orders_ci]
    runs-on: ubuntu-latest
    env:
      service: 'orders'

    name: "ðŸŽ‰ Coverage Report"
    steps:
      - name: Download Test Covereage Output
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.service }}-code-coverage-report-${{ github.sha }}

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          header: orders
          recreate: true
          path: ${{ env.service }}-code-coverage-results.md

  # -- Integration Tests --------------------
  # BROKEN, keeps saying socket hangup
  # docker_ci:
  #   name: "ðŸ§ª Integration Tests"
  #   uses: ./.github/workflows/docker_ci.yml