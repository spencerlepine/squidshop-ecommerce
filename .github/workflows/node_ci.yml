name: Node CI

on:
  workflow_call:
    inputs:
      working_directory:
        required: true
        type: string
  workflow_dispatch:

jobs:
  lint_and_test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        node: ['16'] # '12', '14'
        os: [ubuntu-latest]
    defaults:
      run:
        working-directory: ${{ inputs.working_directory }}

    name: "Lint and Test"
    steps:
      - name: "☁️ Check out Git Repository"
        uses: actions/checkout@v2

      - name: "🔧 Set up Node"
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: "⚙️ Get Yarn Cache Directory Path"
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: "⚡️ Cache Dependencies"
        uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: "📦 Install Dependencies"
        # if: steps.yarn-cache.outputs.cache-hit != 'true' # Over here!
        run: yarn

      - name: "🧐 Lint"
        run: yarn run lint

      - name: "✅ Test"
        run: yarn run test --coverage --coverageDirectory=coverage

      - name: Copy Coverage To Predictable Location
        run: cp coverage/cobertura-coverage.xml cobertura-coverage.xml

      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: ${{ inputs.working_directory }}/cobertura-coverage.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '60 80'

      # Below is BROKEN, github.event_name ALWAYS == 'workflow_dispatch'
      # - name: Add Coverage PR Comment
      #   uses: marocchino/sticky-pull-request-comment@v2
      #   if: github.event_name == 'pull_request'
      #   with:
      #     recreate: true
      #     path: code-coverage-results.md

      - name: Job Summary Output
        run: |
          ls -a
          echo '### Test Coverage :tada: `${{ inputs.working_directory }}`' >> $GITHUB_STEP_SUMMARY
          echo "$(<code-coverage-results.md )" >> $GITHUB_STEP_SUMMARY

  docker_build:
    needs: [lint_and_test]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        node: ['16'] # '16' '12', '14'
        os: ['ubuntu-latest']
    defaults:
      run:
        working-directory: ${{ inputs.working_directory }}

    name: "🐳 Docker Build"
    steps:
      - name: "☁️ Check out Git Repository"
        uses: actions/checkout@v2

      - name: "🏗️ Build"
        run: |
          docker-compose build